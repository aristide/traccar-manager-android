apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 33

    Properties properties = new Properties()
    if (project.rootProject.file('local.properties').canRead()) {
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
    }

    defaultConfig {
        applicationId 'org.atmmotors.maaeko'
        minSdkVersion 19
        targetSdkVersion 33
        versionCode 36
        versionName '1.0'
        multiDexEnabled true
        buildConfigField 'String', 'PREFERENCE_URL', properties.getProperty('PREFERENCE_URL', "${project.PREFERENCE_URL}")
    }
    namespace 'org.atmmotors.maaeko'

    flavorDimensions 'default'
    productFlavors {
        regular {
            isDefault = true
        }
        google
    }

    signingConfigs {
        if (rootProject.file('signing-release.properties').exists()) {
            def signingRelease = new Properties()
            signingRelease.load(new FileInputStream(rootProject.file('signing-release.properties')))
            release {
                storeFile rootProject.file(signingRelease.storeFile)
                storePassword signingRelease.storePassword
                keyAlias signingRelease.keyAlias
                keyPassword signingRelease.keyPassword
            }
        }else {
            release {}
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix '-dev'
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "maaeko-${variant.versionName}(${variant.versionCode}).apk"
                }
            }
        }
        release {
            minifyEnabled true
            debuggable false
            shrinkResources true
            zipAlignEnabled true
            jniDebuggable false
            renderscriptDebuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "maaeko-${variant.versionName}(${variant.versionCode}).apk"
                }
            }
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0'
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.biometric:biometric-ktx:1.2.0-alpha05'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    googleImplementation platform('com.google.firebase:firebase-bom:29.0.3')
    googleImplementation 'com.google.firebase:firebase-core'
    googleImplementation 'com.google.firebase:firebase-analytics'
    googleImplementation 'com.google.firebase:firebase-crashlytics'
    googleImplementation 'com.google.firebase:firebase-messaging'
}

if (getGradle().getStartParameter().getTaskRequests().toString().contains('Google')) {
    apply plugin: 'com.google.gms.google-services'
    apply plugin: 'com.google.firebase.crashlytics'

    task copyJson(type: Copy) {
        from '../../environment/google-services'
        into '.'
        include 'traccar-manager-android.json'
        rename('traccar-manager-android.json', 'google-services.json')
    }

    afterEvaluate {
        preBuild.dependsOn copyJson
    }
}
